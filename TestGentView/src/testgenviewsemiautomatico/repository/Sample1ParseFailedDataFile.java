package testgenviewsemiautomatico.repository;/**
* Generated by CESSOFT
*
*/

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import java.io.File;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

/**
* Class to parse failed xml file.
*/
public final class Sample1ParseFailedDataFile {

/**
* Local object of PackageTestSuite class.
*/

  private static Sample1PackageTestSuite pkgsuite;

/**
* Private constructor for ParseFailedXMLDataFile.
*/

 private Sample1ParseFailedDataFile() {

 }

/**
* Retrieves an array of failed test cases.

* @param testClassName
*                   Name of the test class.
* @param testMethodName
*                   Test method name.
* @return
*                   Array of failed test cases.
*/

 public static String[] getFailedTestCases(
   final String testClassName,
   final String testMethodName) {

  int j = 0;

  if (pkgsuite.excludeFileExists) {
    try {
          DocumentBuilderFactory docBuilderFactory
            = DocumentBuilderFactory.newInstance();
          DocumentBuilder docBuilder
            = docBuilderFactory.newDocumentBuilder();
          Document doc = docBuilder.parse(new File(
        "C:\\Users\\tpbm68\\Documents\\TesisProject\\TestGentView\\src\\testgenviewsemiautomatico\\repository\\", "/failedData.xml"));
            doc.getDocumentElement().normalize();

          NodeList listOfClasses
            = doc.getElementsByTagName("class");

          for (int i = 0;
             i < listOfClasses.getLength(); i++) {
             if (listOfClasses.item(i).getAttributes()
              .getNamedItem("name").getNodeValue()
             .equals(testClassName)) {
                 Element classType = (Element) listOfClasses.item(i);
                 NodeList method = classType.
                   getElementsByTagName("method");

                 if (method.item(0).getAttributes().
                     getNamedItem("name").
                     getNodeValue().
                 equals(testMethodName)) {
                     j++;
                 }
             }
          }

          String[] failedTestCases = new String[j];
          j = 0;

          for (int i = 0;
             i < listOfClasses.getLength(); i++) {
             if (listOfClasses.item(i).getAttributes()
              .getNamedItem("name").getNodeValue()
             .equals(testClassName)) {
                 Element classType = (Element) listOfClasses.item(i);
                 NodeList method = classType.
                   getElementsByTagName("method");

                 if (method.item(0).getAttributes().
                     getNamedItem("name").
                     getNodeValue().
                 equals(testMethodName)) {
                    String testCaseNo = method.item(0)
                       .getAttributes().getNamedItem(
                    "test-case").getNodeValue();
                     failedTestCases[j] = testCaseNo;
                     j++;
                 }
             }
          }
          return failedTestCases;

    } catch (SAXParseException err) {
         System.out.println("**Parsing error" + ", line"
        + err.getLineNumber() + ", uri " + err.getSystemId());
         System.out.println(" " + err.getMessage());
    } catch (SAXException e) {
        Exception x = e.getException();
        if (x == null) {
          e.printStackTrace();
        } else {
           x.printStackTrace();
        }
    } catch (Throwable t) {
         t.printStackTrace();
    }
  }
  return null;
 }
}
